{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-lakehouseproj-dev"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=swo-appsvc-dwh-sql-dev.database.windows.net;Initial Catalog=WideWorldImporters"
		},
		"ls_lake_bronz_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_lake_bronz'"
		},
		"ls_source_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source'"
		},
		"ls_archive_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://archivelakehouseprojdev.dfs.core.windows.net/"
		},
		"ls_databricks_WS_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1202-084555-aaqmz7am"
		},
		"ls_lake_bronz_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://westcancercenterstorage.dfs.core.windows.net/"
		},
		"ls_lakehouse_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://lakelakehouseprojdev.dfs.core.windows.net/"
		},
		"ls_lakehouse_keyvaults_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvlt-lakehouseproj-dev.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipe_01_IngestWWI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set CurrentTimestamp",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CurrentTimestamp",
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyyMMddhhmmss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get IngestConfig",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set CurrentTimestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "IngestConfig",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "IsActive",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get IngestConfig",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get IngestConfig').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@item().isActive",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Source Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "IsActive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('IsActive').output.Value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Copy source table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Delete Destination Files",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"additionalColumns": [
												{
													"name": "Meta_InsertDatetimeUTC",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-ddTHH:mm:ssZ')",
														"type": "Expression"
													}
												},
												{
													"name": "Meta_SourceSystem",
													"value": {
														"value": "WWI",
														"type": "Expression"
													}
												}
											],
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "WWI",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SrcSchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().SrcTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "IngestParquet",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": "lakehouse",
												"PathName": {
													"value": "@concat('landing/wideworldimporters/',item().TrgtTableName)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(item().TrgtTableName,'_',variables('CurrentTimestamp'))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Destination Files",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LandingPath",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": "lakehouse",
												"PathName": {
													"value": "@concat('landing/wideworldimporters/', item().TrgtTableName)",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CurrentTimestamp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "A-Source-Landing/WWI"
				},
				"annotations": [],
				"lastPublishTime": "2023-12-08T15:13:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IngestConfig')]",
				"[concat(variables('factoryId'), '/datasets/WWI')]",
				"[concat(variables('factoryId'), '/datasets/IngestParquet')]",
				"[concat(variables('factoryId'), '/datasets/LandingPath')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Master_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "A-Source-Landing",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_landing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "B-Landing-Raw",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "A-Source-Landing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_landing_raw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "C-Raw-Strcutured",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "B-Landing-Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_raw_strctured",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "D-Strcutured-Curated",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "C-Raw-Strcutured",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_strctured_curated",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-12-08T12:02:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_source_landing')]",
				"[concat(variables('factoryId'), '/pipelines/pl_landing_raw')]",
				"[concat(variables('factoryId'), '/pipelines/pl_raw_strctured')]",
				"[concat(variables('factoryId'), '/pipelines/pl_strctured_curated')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_landing_raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataset1 data ingestion landing_raw",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/masood.joukar@softwareone.com/lakehouse/dbx/raw/dataset1_raw"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_WS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dataset2 data ingestion landing_raw",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/masood.joukar@softwareone.com/lakehouse/dbx/raw/dataset2_raw"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_WS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "B-Landing-Raw"
				},
				"annotations": [],
				"lastPublishTime": "2023-12-08T12:02:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_WS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_raw_strctured')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataset1 data transformation raw_strctured",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/masood.joukar@softwareone.com/lakehouse/dbx/strctured/dataset1_structured"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_WS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dataset2 data transformation raw_strctured",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/masood.joukar@softwareone.com/lakehouse/dbx/strctured/dataset2_structured"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_WS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "C-Raw-Strcutured"
				},
				"annotations": [],
				"lastPublishTime": "2023-12-08T12:02:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_WS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_source_landing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataset2 ingestion from source to landing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "Sales.csv",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_landing",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataset1 ingestion from source to landing_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "Employees.csv",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_landing",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "A-Source-Landing"
				},
				"annotations": [],
				"lastPublishTime": "2023-12-08T12:02:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_strctured_curated')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataset1 data aggregation strctured_curated",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/masood.joukar@softwareone.com/lakehouse/dbx/curated/Project: Sales Reporting/Sales Reporting Project_curated"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_WS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "D-Strcutured-Curated"
				},
				"annotations": [],
				"lastPublishTime": "2023-12-08T12:02:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_WS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronz_CovidDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lake_bronz",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "coviddb_bronz",
						"fileSystem": "bronz"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lake_bronz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestConfig')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lakehouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Config"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "WWI_IngestConfig.json",
						"fileSystem": "adfconfig"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"SrcSchemaName": {
							"type": "string"
						},
						"SrcTableName": {
							"type": "string"
						},
						"TrgtTableName": {
							"type": "string"
						},
						"IsActive": {
							"type": "boolean"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lakehouse",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string",
						"defaultValue": "lakehouse"
					},
					"PathName": {
						"type": "string",
						"defaultValue": "landing/wideworldimporters"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Cities"
					}
				},
				"folder": {
					"name": "B-Landing"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().PathName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LandingPath')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lakehouse",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string",
						"defaultValue": "lakehouse"
					},
					"PathName": {
						"type": "string",
						"defaultValue": "landing/wideworldimporters"
					}
				},
				"folder": {
					"name": "B-Landing"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "landing/wideworldimporters",
						"fileSystem": "lakehouse"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Covid_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "coviddb"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "Application"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "vwCities"
					}
				},
				"folder": {
					"name": "Sources"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CityName",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LatestRecordedPopulation",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_archive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_archive",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "C-Archive"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "archive"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_archive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_landing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lakehouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "B-Landing"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "landing",
						"fileSystem": "lakehouse"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_lakehouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "A-Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source - in a real project there is no need for this directory. here it is used as there is no real data source",
						"fileSystem": "lakehouse"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lakehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_archive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_archive_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_lakehouse_keyvaults",
							"type": "LinkedServiceReference"
						},
						"secretName": "archiv"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lakehouse_keyvaults')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks_WS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5713542433971422.2.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_lakehouse_keyvaults",
							"type": "LinkedServiceReference"
						},
						"secretName": "databrcks-token1"
					},
					"existingClusterId": "[parameters('ls_databricks_WS_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_lakehouse_keyvaults')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_lake_bronz')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_lake_bronz_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_lake_bronz_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_lakehouse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_lakehouse_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_lakehouse_keyvaults')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_lakehouse_keyvaults_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}